[{"/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/index.js":"1","/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/App.js":"2","/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/serviceWorker.js":"3","/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/app/store.js":"4","/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/features/counter/counterSlice.js":"5","/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/features/counter/Counter.js":"6","/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/Header.js":"7","/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/HeaderOption.js":"8","/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/Sidebar.js":"9","/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/Feed.js":"10","/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/InputOption.js":"11","/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/Posts.js":"12","/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/firebase.js":"13"},{"size":644,"mtime":1608774944061,"results":"14","hashOfConfig":"15"},{"size":542,"mtime":1608842449616,"results":"16","hashOfConfig":"15"},{"size":5141,"mtime":1608774944062,"results":"17","hashOfConfig":"15"},{"size":206,"mtime":1608774944057,"results":"18","hashOfConfig":"15"},{"size":1551,"mtime":1608774944060,"results":"19","hashOfConfig":"15"},{"size":1626,"mtime":1608774944058,"results":"20","hashOfConfig":"15"},{"size":1590,"mtime":1608833493275,"results":"21","hashOfConfig":"15"},{"size":488,"mtime":1608833345117,"results":"22","hashOfConfig":"15"},{"size":1603,"mtime":1608841840808,"results":"23","hashOfConfig":"15"},{"size":1965,"mtime":1608939405751,"results":"24","hashOfConfig":"15"},{"size":292,"mtime":1608846171785,"results":"25","hashOfConfig":"15"},{"size":1354,"mtime":1608854843110,"results":"26","hashOfConfig":"15"},{"size":537,"mtime":1608939493017,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"23l04v",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/index.js",[],["56","57"],"/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/App.js",[],"/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/serviceWorker.js",[],"/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/app/store.js",[],"/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/features/counter/counterSlice.js",[],"/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/features/counter/Counter.js",[],"/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/Header.js",[],"/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/HeaderOption.js",[],"/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/Sidebar.js",[],"/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/Feed.js",["58","59"],"import React, {useState, useEffect} from 'react'\nimport \"./Feed.css\"\nimport CreateIcon from \"@material-ui/icons/Create\"\nimport InputOption from './InputOption';\nimport ImageIcon from \"@material-ui/icons/Image\"\nimport { CalendarViewDay, EventNote, SubscriptionsRounded } from '@material-ui/icons';\nimport Post from './Posts';\nimport { db } from './firebase';\n\nfunction Feed() {\n\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        db.collection(\"posts\").onSnapShot(snapshot =>(\n            setPosts(snapShot.docs.map(doc => (\n                {\n                    id: doc.id,\n                    data: doc.data\n                }\n            )))\n        ))\n    }, [])\n\n    const sendPost = e => {\n        e.preventDefault();\n\n        \n    }\n\n    return (\n        <div className='feed'>\n            <div className=\"feed__inputContainer\">\n                <div className=\"feed__input\"> \n                <CreateIcon />\n                <form>\n                    <input type=\"text\" />\n                    <button onClick={sendPost} type=\"submit\">Send</button>\n                </form>\n                </div>\n                <div className=\"feed__inputOptions\">\n                    <InputOption Icon={ImageIcon} title='Photo' \n                    color=\"#70b4f9\"/> \n                    <InputOption Icon={SubscriptionsRounded} title='Event' \n                    color=\"#C0CBCD\"/> \n                    <InputOption Icon={EventNote} title='Event' \n                    color=\"#70b4f9\"/> \n                    <InputOption Icon={CalendarViewDay} title='Write article' \n                    color=\"#7FC15E\"/> \n\n                </div>\n            </div>\n            {posts.map((post) =>{\n                <Post />\n            })}\n            {/* {posts } */}\n            <Post \n                name=\"Indika Boteju\" \n                description='this is a test'\n                message=\"Wow this is working\" />\n\n        </div> \n    )\n}\n\nexport default Feed\n","/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/InputOption.js",[],"/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/Posts.js",[],"/Users/indiboteju/Desktop/coding_dj/linkedin-clone/src/firebase.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":2,"message":"65","line":16,"column":22,"nodeType":"66","messageId":"67","endLine":16,"endColumn":30},{"ruleId":"68","severity":1,"message":"69","line":53,"column":31,"nodeType":"70","messageId":"71","endLine":53,"endColumn":33},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-undef","'snapShot' is not defined.","Identifier","undef","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]